diamonds %>%
mutate(
carat_binned <- as.factor(cut_number(diamonds$carat, 7))
) %>%
ggplot()+
geom_histogram(aes(price))+
facet_grid(carat_binned ~ cut)
diamonds %>%
mutate(
carat_binned = as.factor(cut_number(diamonds$carat, 7))
) %>%
ggplot()+
geom_histogram(aes(price))+
facet_grid(carat_binned ~ cut)
diamonds %>%
mutate(
carat_binned = as.factor(cut_number(diamonds$carat, 7))
) %>%
ggplot()+
geom_histogram(aes(price), binwidth = 100)+
facet_grid(carat_binned ~ cut)
diamonds %>%
mutate(
carat_binned = as.factor(cut_number(diamonds$carat, 7))
) %>%
ggplot()+
geom_histogram(aes(price), binwidth = 100)+
facet_grid(carat_binned ~ cut)
diamonds %>%
mutate(
carat_binned = as.factor(cut_number(diamonds$carat, 7))
) %>%
ggplot()+
geom_freqpoly(aes(price), binwidth = 100)+
facet_grid(carat_binned ~ cut)
diamonds %>%
mutate(
carat_binned = as.factor(cut_number(diamonds$carat, 7))
) %>%
ggplot()+
geom_freqpoly(aes(price), binwidth = 100, stat = ..density..)+
facet_grid(carat_binned ~ cut)
diamonds %>%
mutate(
carat_binned = as.factor(cut_number(diamonds$carat, 7))
) %>%
ggplot()+
geom_freqpoly(aes(price), binwidth = 100)+
facet_grid(carat_binned ~ cut)
diamonds %>%
mutate(
carat_binned = as.factor(cut_number(diamonds$carat, 7))
) %>%
ggplot()+
geom_freqpoly(aes(price, stat = ..density..), binwidth = 100)+
facet_grid(carat_binned ~ cut)
diamonds %>%
mutate(
carat_binned = as.factor(cut_number(diamonds$carat, 7))
) %>%
ggplot()+
geom_freqpoly(aes(price,  ..density..), binwidth = 100)+
facet_grid(carat_binned ~ cut)
diamonds %>%
mutate(
carat_binned = as.factor(cut_number(diamonds$carat, 7))
) %>%
ggplot()+
geom_freqpoly(aes(price,  ..density..), binwidth = 100)+
facet_grid(carat_binned ~ cut)
diamonds %>%
mutate(
carat_binned = as.factor(cut_number(diamonds$carat, 7))
) %>%
ggplot()+
geom_freqpoly(aes(price,  ..density..), binwidth = 100)+
facet_grid(carat_binned ~ cut)
cut_number(diamonds$carat, 25)
25
cut_number(diamonds$carat,50)
cut_number(diamonds$carat, 40)
cut_interval(diamonds$carat, 20)
cut_interval(diamonds$carat, 10)
ggplot(diamonds, aes(x = as.factor(cut_interval(diamonds$carat, 20)), y = cut))+
geom_tile(aes(fill = price))
ggplot(diamonds, aes(x = as.factor(cut_interval(diamonds$carat, 15)), y = cut))+
geom_tile(aes(fill = price))
ggplot(diamonds, aes(x = as.factor(cut_interval(diamonds$carat, 5)), y = cut))+
geom_tile(aes(fill = price))
ggplot(diamonds, aes(x = as.factor(cut_width(diamonds$carat, 5)), y = cut))+
geom_tile(aes(fill = price))
ggplot(diamonds, aes(x = as.factor(cut_width(diamonds$carat, 0.5)), y = cut))+
geom_tile(aes(fill = price))
ggplot(diamonds, aes(x = as.factor(cut_width(diamonds$carat, 0.5,boundary = 0)), y = cut))+
geom_tile(aes(fill = price))
ggplot(diamonds, aes(x = as.factor(cut_number(diamonds$carat, 0.5,boundary = 0)), y = cut))+
geom_tile(aes(fill = price))
ggplot(diamonds, aes(x = as.factor(cut_number(diamonds$carat, 10)), y = cut))+
geom_tile(aes(fill = price))
ggplot(diamonds, aes(x = as.factor(cut_number(diamonds$carat, 15)), y = cut))+
geom_tile(aes(fill = price))
ggplot(diamonds, aes(x = as.factor(cut_number(diamonds$carat, 30)), y = cut))+
geom_tile(aes(fill = price))
ggplot(diamonds, aes(x = as.factor(cut_number(diamonds$carat, 20)), y = cut))+
geom_tile(aes(fill = price))
ggplot(diamonds, aes(x = as.factor(cut_number(diamonds$carat, 20)), y = cut))+
geom_tile(aes(fill = mean(price)))
diamonds %>%
select(carat, cut, price) %>%
mutate(
carat_bin = as.factor(cut_number(diamonds$carat, 20))
) %>%
group_by(carat_bin) %>%
summarise(
means = mean(price)
) %>%
ggplot(aes(x = carat_bin, y = cut))+
geom_tile(aes(fill = means))
diamonds %>%
select(carat, cut, price) %>%
mutate(
carat_bin = as.factor(cut_number(diamonds$carat, 20))
) %>%
group_by(carat_bin) %>%
summarise(
means = mean(price)
)
diamonds %>%
select(carat, cut, price) %>%
mutate(
carat_bin = as.factor(cut_number(diamonds$carat, 20))
) %>%
group_by(carat_bin) %>%
mutate(
means = mean(price)
)
diamonds %>%
select(carat, cut, price) %>%
mutate(
carat_bin = as.factor(cut_number(diamonds$carat, 20))
) %>%
group_by(carat_bin) %>%
mutate(
means = mean(price)
) %>%
ggplot(aes(x = carat_bin, y = cut))+
geom_tile(aes(fill = meeas))
diamonds %>%
select(carat, cut, price) %>%
mutate(
carat_bin = as.factor(cut_number(diamonds$carat, 20))
) %>%
group_by(carat_bin) %>%
mutate(
means = mean(price)
) %>%
ggplot(aes(x = carat_bin, y = cut))+
geom_tile(aes(fill = means))
diamonds %>%
select(carat, cut, price) %>%
mutate(
carat_bin = as.factor(cut_number(diamonds$carat, 20))
) %>%
group_by(carat_bin, cut) %>%
mutate(
means = mean(price)
) %>%
ggplot(aes(x = carat_bin, y = cut))+
geom_tile(aes(fill = means))
ggplot(data = diamonds) +
geom_point(mapping = aes(x = x, y = y)) +
coord_cartesian(xlim = c(4, 11), ylim = c(4, 11))
?modelr
library(modelr)
?lm
hello
getwd()
library(tidyverse)
getwd()
setwd('./R/Notebook/r4ds_answers/')
library(tidyverse)
table1
table2
table3
table4a
table4b
?table1
table2 %>%
filter(type == "cases")
populations <- table %>%
filter(tyoe == "population")
populations <- table %>%
filter(type == "population")
populations <- table %>%
filter(type == "populations")
populations <- table2 %>%
filter(type == "populations")
populations <- table2 %>%
filter(type == "population")
populations
cases
cases <- table2 %>%
filter(type == "case")
populations <- table2 %>%
filter(type == "population")
cases
cases <- table2 %>%
filter(type == "cases")
populations <- table2 %>%
filter(type == "population")
cases
cases$count / populations$count
(cases$count / populations$count)*1000
rbind(cases, populations)
cbind(cases, populations)
merged$rates = (cases$count / populations$count)*1000
merged$rates (cases$count / populations$count)*1000
merged <- cbind(cases, populations)
merged$rates= (cases$count / populations$count)*1000
merged
table4a
table4b
rates_99 <- table4a$`1999` / table4b$`1999`
rates_00 <- table4a$`2000`/ table4b$`1999`
rates_00
table4a
rates_99 <- (table4a$`1999` / table4b$`1999`)*1000
rates_00 <- (table4a$`2000`/ table4b$`1999`)*1000
cbind(table4a$country, rates_99, rates_00)
table4a %>%
select(country)
table4a['country']
new <- table4a['country']
new$rates_00 = rates_00
new$rates_99 = rates_99
new
rates_00 <- (table4a$`2000`/ table4b$`2000`)*1000
rates_99 <- (table4a$`1999` / table4b$`1999`)*1000
rates_00 <- (table4a$`2000`/ table4b$`2000`)*1000
new <- table4a['country']
new$rates_00 = rates_00
new$rates_99 = rates_99
new
?enframe
table2
table2 %>%
filter(type == "cases") %>%
ggplot()+
geom_point(aes(x = year,y = count ))
table2 %>%
filter(type == "cases") %>%
ggplot(aes(x = year,y = count ))+
geom_point()+
geom_line()
table2 %>%
filter(type == "cases") %>%
ggplot(aes(x = factor(year),y = count ))+
geom_point()+
geom_line()
table2 %>%
filter(type == "cases") %>%
ggplot(aes(x = factor(year),y = count))+
geom_point(aes(group = country))+
geom_line()
table2 %>%
filter(type == "cases") %>%
ggplot(aes(x = factor(year),y = count))+
geom_point(aes(group = country))+
geom_line(aes(group = country))
table2 %>%
filter(type == "cases") %>%
ggplot(aes(x = factor(year),y = count))+
geom_point(aes(color = country))+
geom_line(aes(group = country))
table2 %>%
filter(type == "cases") %>%
ggplot(aes(x = year,y = count))+
geom_point(aes(color = country))+
geom_line(aes(group = country))
table2
table2 %>%
filter(type == "cases") %>%
ggplot(aes(x = year,y = count))+
geom_point(aes(color = country))+
geom_line(aes(group = country))
table1
table2 %>%
filter(type == "cases")
table1
table2 %>%
filter(type == "cases") %>%
ggplot(aes(year, count)) +
geom_line(aes(group = country), colour="grey50")+
geom_point(aes(colour = country))
ggplot(table1, aes(year, cases)) +
geom_line(aes(group = country), colour = "grey50") +
geom_point(aes(colour = country))
stocks %>%
spread(year, return) %>%
gather("year", "return", `2015`:`2016`)
stocks <- tibble(
year   = c(2015, 2015, 2016, 2016),
half  = c(   1,    2,     1,    2),
return = c(1.88, 0.59, 0.92, 0.17)
)
stocks
stocks %>%
spread(year, return) %>%
gather("year", "return", `2015`:`2016`)
stocks %>%
spread(year, return) %>%
gather("year", "return", `2015`:`2016`)
stocks %>%
spread(year, return) %>%
gather("year", "return", `2015`:`2016`)
stocks
stocks %>%
spread(year, return)
stocks %>%
spread(year, return) %>%
gather("year", "return", `2015`:`2016`)
stocks %>%
spread(year, return)
stocks %>%
spread(year, return) %>%
gather("year", "return", `2015`:`2016`)
stocks
stocks %>%
spread(year, return) %>%
gather("year", "return", `2015`:`2016`)
stocks %>%
spread(year, return) %>%
gather("year", "return", `2015`:`2016`)
stocks
stocks %>%
spread(year, return) %>%
gather("year", "return", `2015`:`2016`)
?spread
type.convert('4')
type.convert('4')*
2
?gather
tbl <- tibble(
number = c(1,1,2),
type = c("date", "integer", "date"),
value = c("12/08/1993", "24", "16/10/1995")
)
tbl
spread(tbl, key = type, value = value, convert = TRUE)
spd <- spread(tbl, key = type, value = value, convert = TRUE) #check column types of spd
spd
tbl
spd
tibble(
`2107` = c(TRUE),
`TRUE` = c(FALSE),
`13.4` = c(TRUE)
)
tibble(
`2017` = c('year'),
`TRUE` = c('student'),
`13.4` = c('grade')
)
gather("attributes", "names", `2017`, `TRUE`, `13.4`)
tbl <- tibble(
`2017` = c('year'),
TRUE = c('student'),
tbl <- tibble(
`2017` = c('year'),
`TRUE` = c('student'),
`13.4` = c('grade')
)
gather("attributes", "names", `2017`, `TRUE`, `13.4`)
gather("attributes", "names", `2017`, `13.4`)
gather("attributes", "names", `2017`, `TRUE`, `13.4`, convert = TRUE)
tbl <- tibble(
`2017` = c('year'),
`TRUE` = c('student'),
`13.4` = c('grade')
)
TB;
tbl
gather("attributes", "names", `2017`, `TRUE`, `13.4`, convert = TRUE)
gather(`2017`, `TRUE`, `13.4`, convert = TRUE)
gather(tbl, `2017`, `TRUE`, `13.4`, convert = TRUE)
gather(tbl, `2017`, `TRUE`, `13.4`, convert = TRUE, key = "attr", value = "vals")
gtr <- gather(tbl, `2017`, `TRUE`, `13.4`, convert = TRUE, key = "attr", value = "vals")
gtr
gtr[1,1]
gtr[[1,1]]
type(gtr[[1,1]])
typeof(gtr[[1,1]])
typeof(gtr[[1,2]])
gtr
tbl <- tibble(
'2017' = c('year'),
`TRUE` = c('student'),
`13.4` = c('grade')
)
tbl
tbl <- tibble(
'2017' = c('year'),
TRUE = c('student'),
tbl <- tibble(
'2017' = c('year'),
'TRUE' = c('student'),
13.4 = c('grade')
tbl <- tibble(
'2017' = c('year'),
'TRUE' = c('student'),
'13.4' = c('grade')
)
tbl
gtr <- gather(tbl, '2017', 'TRUE', '13.4', convert = TRUE, key = "attr", value = "vals")
gtr
gtr <- gather(tbl, '2017', 'TRUE', '13.4', convert = TRUE, key = "attr", value = "vals")
tbl
gtr <- gather(tbl, '2017', 'TRUE', convert = TRUE, key = "attr", value = "vals")
gtr <- gather(tbl, '2017', convert = TRUE, key = "attr", value = "vals")
gtr <- gather(tbl, '2017', 'TRUE', '13.4', key = "attr", value = "vals")
gtr <- gather(tbl, "2017", 'TRUE', '13.4', key = "attr", value = "vals")
gtr <- gather(tbl, "2017", "TRUE", "13.4"", key = "attr", value = "vals")
gtr <- gather(tbl, "2017", "TRUE", "13.4", key = "attr", value = "vals")
gtr
gtr <- gather(tbl, "2017", "TRUE", "13.4", key = "attr", value = "vals", convert = TRUE)
gtr <- gather(tbl, `2017`, "TRUE", "13.4", key = "attr", value = "vals", convert = TRUE)
gtr <- gather(tbl, `2017`, `TRUE`, `13.4`, key = "attr", value = "vals", convert = TRUE)
gtr
gtr[2,1]
gtr[[2,1]]
gtr[[1,1]]
gtr <- gather(tbl, `2017`, `TRUE`, `13.4`, key = "attr", value = "vals", convert = TRUE)
tbl
gtr
tbl <- tibble(
'2017' = c(10,20),
'2018' = c(30,40),
'2019' = c(50,60),
'x' = c(1,2)
)
tbl
gtr <- gather(tbl, `2017`, `2018`, `2019`, key = "year", value = "y", convert = TRUE)
gtr
table4a %>%
gather(1999, 2000, key = "year", value = "cases")
?gather
table4a %>%
gather(`1999`, `2000`, key = "year", value = "cases")
people <- tribble(
~name,             ~key,    ~value,
#-----------------|--------|------
"Phillip Woods",   "age",       45,
"Phillip Woods",   "height",   186,
"Phillip Woods",   "age",       50,
"Jessica Cordero", "age",       37,
"Jessica Cordero", "height",   156
)
spread(people, key, value)
people <- tribble(
~name,             ~key,    ~value, ~middle
#-----------------|--------|------|----------|
"Phillip Woods",   "age",       45, "J",
people <- tribble(
~name,             ~key,    ~value, ~middle ,
#-----------------|--------|------|----------|
"Phillip Woods",   "age",       45, "J",
"Phillip Woods",   "height",   186, "J",
"Phillip Woods",   "age",       50, "M",
"Jessica Cordero", "age",       37, "",
"Jessica Cordero", "height",   156, "",
)
people <- tribble(
~name,             ~key,    ~value, ~middle,
#-----------------|--------|------|----------|
"Phillip Woods",   "age",       45, "J",
"Phillip Woods",   "height",   186, "J",
"Phillip Woods",   "age",       50, "M",
"Jessica Cordero", "age",       37, " ",
"Jessica Cordero", "height",   156, " ",
)
people <- tribble(
~name,             ~key,    ~value, ~middle,
#-----------------|--------|------|----------|
"Phillip Woods",   "age",       45, "J",
"Phillip Woods",   "height",   186, "J",
"Phillip Woods",   "age",       50, "M",
"Jessica Cordero", "age",       37, " ",
"Jessica Cordero", "height",   156, " "
)
spread(people, key, value)
people <- tribble(
~name,             ~key,    ~value, ~middle,
#-----------------|--------|------|----------|
"Phillip Woods",   "age",       45, "J",
"Phillip Woods",   "height",   186, "J",
"Phillip Woods",   "age",       50, "M",
"Jessica Cordero", "age",       37, "",
"Jessica Cordero", "height",   156, ""
)
spread(people, key, value)
preg <- tribble(
~pregnant, ~male, ~female,
"yes",     NA,    10,
"no",      20,    12
)
preg
gather(preg, key = "gender", value = "count", "male", "female")
gather(preg, key = "gender", value = "count", male, femalee)
gather(preg, key = "gender", value = "count", male, female)
spread(temp, pregnant, count)
temp <- gather(preg, key = "gender", value = "count", male, female)
spread(temp, key = pregnant, value = count)
